{"version":3,"sources":["components/MerchantsPage/images/merchantIcon.png","components/MerchantsPage/styles.module.scss","components/MerchantsPage/images/nyc_3.png","components/MerchantsPage/images/skyline-hero.png","components/MerchantsPage/MerchantNavBar.tsx","components/MerchantsPage/MerchantCard.tsx","components/MerchantsPage/DescriptionBox.tsx","components/MerchantsPage/ContributionBar.tsx","components/MerchantsPage/DonationPool.tsx","components/MerchantsPage/MerchantsPage.tsx"],"names":["module","exports","NavBar","filterStoreType","useState","selected","setSelected","NavContainer","value","text","map","type","key","className","onClick","e","preventDefault","setStoreType","toUpperCase","styled","div","MerchantCardBox","storeInfo","city","state","locations","to","seller_id","style","textDecoration","color","Logo","src","hero_image_url","alt","Location","StoreName","name","Summary","summary","story","ProgressBar","amountRaised","amount_raised","targetAmount","target_amount","progressBarColor","progress_bar_color","numContributions","num_contributions","numDonations","num_donations","numGiftCards","num_gift_cards","donationAmount","donation_amount","giftCardAmount","gift_card_amount","h4","MerchantCard","smallScreens","h3","img","TargetMerchantBox","Icon","merchantIcon","List","Bullets","ul","li","ContributionBar","raised","total","totalDonations","totalGiftCards","Container","Heading","Contributions","background","TextContainer","Math","floor","toLocaleString","DonationPoolBox","t","useTranslation","dispatch","useModalPaymentDispatch","ColumnContainer","SET_MODAL_VIEW","payload","Modal","purchaseType","sellerId","sellerName","costPerMeal","Image","Hero","tabletScreens","MerchantsPage","props","sellers","setSellers","filter","setFilter","setDonations","setGiftCards","fetchData","a","getSellers","data","contributions","reduce","store","useEffect","styles","container","display","menuOpen","overlayContainer","nycMapBackground","nycMap","contentContainer","textArea","fontWeight","ownerPanel","DescriptionBox","MerchantInfoContainer","DonationPool","storeInfoContainer","result","cuisine_name","merchantsContainer","Loader"],"mappings":"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","file":"static/js/7.9e96f0ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/merchantIcon.2c7f1dbe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2WJAK\",\"storeInfoContainer\":\"styles_storeInfoContainer__2EkUd\",\"merchantsContainer\":\"styles_merchantsContainer__13vzx\",\"merchantCard\":\"styles_merchantCard__1vFxm\",\"merchantCardLogo\":\"styles_merchantCardLogo__25Qep\",\"overlayContainer\":\"styles_overlayContainer__3upFs\",\"nycMap\":\"styles_nycMap__qHmku\",\"contentContainer\":\"styles_contentContainer__1Wz03\",\"textArea\":\"styles_textArea__3id8d\",\"ownerPanel\":\"styles_ownerPanel__3Sxji\",\"storeInfo\":\"styles_storeInfo__1g3Wp\"};","module.exports = __webpack_public_path__ + \"static/media/nyc_3.d3931cea.png\";","module.exports = __webpack_public_path__ + \"static/media/skyline-hero.19b1af16.png\";","import * as React from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  filterStoreType: Function;\n}\n\nconst NavBar = ({ filterStoreType }: Props) => {\n  const [selected, setSelected] = useState('all');\n\n  const setStoreType = (type: any, e: any) => {\n    e.preventDefault();\n    setSelected(type);\n    filterStoreType(type);\n  };\n\n  const storeTypes = [\n    { value: 'all', text: 'All' },\n    { value: 'Bakery', text: 'Bakery' },\n    { value: 'Chinese', text: 'Restaurant' },\n    // { value: 'grocery', text: 'Grocery' },\n    // { value: 'salon', text: 'Salon' },\n  ];\n\n  return (\n    <React.Fragment>\n      <NavContainer>\n        {storeTypes.map((type) => (\n          <div key={type.value}>\n            <button\n              className={\n                selected === type.value\n                  ? 'modalButton--filled'\n                  : 'modalButton--back'\n              }\n              onClick={(e) => setStoreType(type.value, e)}\n            >\n              {type.text.toUpperCase()}\n            </button>\n          </div>\n        ))}\n      </NavContainer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n\nconst NavContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 500px;\n  margin-bottom: 50px;\n\n  @media (max-width: 450px) {\n    display: none;\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BrowsePageSeller } from '../../utilities/api';\nimport ProgressBar from '../ProgressBar';\nimport styled from 'styled-components';\nimport { smallScreens } from '../../utilities/general/responsive';\n\nexport interface Props {\n  storeInfo?: BrowsePageSeller;\n}\n\nconst MerchantCardBox = ({ storeInfo }: Props) => {\n  let city = '';\n  let state = '';\n\n  if (storeInfo!.locations && storeInfo!.locations[0]) {\n    city = storeInfo!.locations[0].city;\n    state = storeInfo!.locations[0].state;\n  }\n\n  return (\n    <React.Fragment>\n      <Link\n        to={`/${storeInfo!.seller_id}`}\n        style={{ textDecoration: 'none', color: 'black' }}\n      >\n        <MerchantCard>\n          <Logo src={storeInfo!.hero_image_url} alt=\"Logo\" />\n          <Location>\n            {city}, {state}\n          </Location>\n          <StoreName>{storeInfo!.name}</StoreName>\n          <Summary>{storeInfo!.summary || storeInfo!.story}</Summary>\n          {/* TODO: need to update \"donation\" phrase and the time stamp */}\n          {/* <div style={{ color: '#949494' }}>\n            Last donation 1h ago\n          </div> */}\n          <br />\n          <ProgressBar\n            amountRaised={storeInfo!.amount_raised}\n            targetAmount={storeInfo!.target_amount}\n            progressBarColor={storeInfo!.progress_bar_color}\n            numContributions={storeInfo!.num_contributions}\n            numDonations={storeInfo!.num_donations}\n            numGiftCards={storeInfo!.num_gift_cards}\n            donationAmount={storeInfo!.donation_amount}\n            giftCardAmount={storeInfo!.gift_card_amount}\n          />\n        </MerchantCard>\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default MerchantCardBox;\n\nconst Location = styled.h4`\n  font-weight: bolder;\n  color: #1e7c9a;\n  font-size: 15px;\n`;\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: 61px;\n`;\n\nexport const MerchantCard = styled.div`\n    height: 475px;\n    width: 350px;\n    box-shadow: 0px 0px 7px rgba(0, 0, 0, 0.2);\n    margin: 30px 60px 30px 0;\n    padding: 25px;\n    font-size: 14px;\n    background-color: white;\n    &.descriptionBox {\n        width: 430px;\n        height: 475px;\n        text-align: center;\n    }\n    @media (${smallScreens}) {\n        margin: 30px;\n        width: 85vw;\n        &.descriptionBox {\n            width: 85vw;\n            height: auto;\n    }\n`;\n\nconst StoreName = styled.h3`\n  font-weight: bold;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-size: 16px;\n  color: #1e1e1e;\n`;\n\nconst Logo = styled.img`\n  position: relative;\n  width: 100%;\n  border: 1px solid #e5e5e5;\n  border-radius: 15px;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { MerchantCard } from './MerchantCard';\nimport merchantIcon from './images/merchantIcon.png';\n\nconst TargetMerchantBox = () => (\n  <MerchantCard className=\"descriptionBox\">\n    <Icon src={merchantIcon} alt=\"target-merchant-img\" />\n    <h3>Meet our Target Merchant</h3>\n    <List>\n      <Bullets>Asian immigrant-owned small businesses</Bullets>\n      <Bullets>\n        Not fluent in English, run cash-only establishments, and not tech-savvy\n      </Bullets>\n      <Bullets>\n        Currently struggling to pay rent, utility bill and employee wages\n      </Bullets>\n      <Bullets>\n        Do not have websites, online delivery service, or vouchers available\n      </Bullets>\n      <Bullets>\n        Located in NYC Manhattan Chinatown, Flushing, or Bensonhurst\n      </Bullets>\n    </List>\n  </MerchantCard>\n);\n\nexport default TargetMerchantBox;\n\nconst Icon = styled.img`\n  width: 45%;\n`;\n\nconst List = styled.ul`\n  padding: 0 5px 0 20px;\n`;\n\nconst Bullets = styled.li`\n  text-align: left;\n  padding: 5px 0;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  totalDonations: number;\n  totalGiftCards: number;\n}\n\nconst ContributionBar = ({ totalDonations, totalGiftCards }: Props) => {\n  const progressWidth = (raised: number, total: number) => {\n    if (raised < total) return (raised / total) * 100;\n    return 100;\n  };\n\n  return (\n    <Container>\n      <Heading>Total Raised</Heading>\n      <Contributions\n        style={{\n          background: `linear-gradient(-45deg, #dd678a ${progressWidth(\n            totalDonations,\n            totalDonations + totalGiftCards\n          )}%, #F6B917 0%)`,\n        }}\n      />\n      <TextContainer>\n        <span>\n          VOUCHERS:{' '}\n          <b>${(Math.floor(totalGiftCards) / 100).toLocaleString()}</b>\n        </span>\n        <span>\n          DONATIONS:{' '}\n          <b>${(Math.floor(totalDonations) / 100).toLocaleString()}</b>\n        </span>\n      </TextContainer>\n      <p>\n        100% of all proceeds go to the businesses, and we cover the credit card\n        processing fees.\n      </p>\n    </Container>\n  );\n};\n\nexport default ContributionBar;\n\nconst Container = styled.div`\n  font-size: 13px;\n`;\n\nconst Contributions = styled.div`\n  border-radius: 25px;\n  height: 25px;\n  z-index: 5;\n  width: 100%;\n  margin-bottom: 15px;\n`;\n\nconst TextContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Heading = styled.div`\n  font-size: 17px;\n  font-weight: bold;\n  margin: 15px 0;\n`;\n","import * as React from 'react';\nimport Hero from './images/skyline-hero.png';\nimport Modal from '../Modal';\nimport { SET_MODAL_VIEW } from '../../utilities/hooks/ModalPaymentContext/constants';\nimport { useModalPaymentDispatch } from '../../utilities/hooks/ModalPaymentContext/context';\nimport {\n  smallScreens,\n  tabletScreens,\n} from '../../utilities/general/responsive';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst DonationPoolBox = () => {\n  const { t } = useTranslation();\n  const dispatch = useModalPaymentDispatch();\n\n  const openModal = (e: any) => {\n    e.preventDefault();\n    dispatch({ type: SET_MODAL_VIEW, payload: 0 });\n  };\n\n  return (\n    <div>\n      <Container>\n        <ColumnContainer>\n          <h4>\n            {t(\n              'Checked out our merchants but not sure who to donate to first?'\n            )}\n          </h4>\n          <span>{t('You can support by donating to our donation pool!')}</span>\n          <span>\n            {t('All donations will be distributed evenly to our merchants.')}\n          </span>{' '}\n          <br />\n          <button className={'button--red-filled'} onClick={openModal}>\n            {t('SUPPORT CHINATOWN')}\n          </button>\n          <Modal\n            purchaseType={'donation'}\n            sellerId={'send-chinatown-love'}\n            sellerName={'Send Chinatown Love Fund'}\n            costPerMeal={0}\n          />\n        </ColumnContainer>\n        <Image src={Hero} alt=\"banner\" />\n      </Container>\n    </div>\n  );\n};\n\nexport default DonationPoolBox;\n\nconst Container = styled.div`\n  border: 1px solid #e5e5e5;\n  display: flex;\n  max-height: 225px;\n  object-fit: cover;\n  margin: 35px 10vw 55px 7vw;\n  justify-content: space-between;\n  @media (${tabletScreens}) {\n    max-height: 400px;\n    margin: 0 7vw 55px;\n  }\n\n  @media (${smallScreens}) {\n    flex-direction: column-reverse;\n  }\n`;\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 2rem 1.5rem;\n\n  @media (${tabletScreens}) {\n    > span {\n      margin: 2.5px;\n    }\n\n    > button {\n      width: 100%;\n    }\n  }\n`;\n\nconst Image = styled.img`\n  width: 48%;\n  height: auto;\n  object-fit: cover;\n  @media (${smallScreens}) {\n    width: 100%;\n  }\n`;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { getSellers } from '../../utilities';\nimport NavBar from './MerchantNavBar';\nimport MerchantCard from './MerchantCard';\nimport DescriptionBox from './DescriptionBox';\nimport ContributionBar from './ContributionBar';\nimport styles from './styles.module.scss';\nimport nycMapBackground from './images/nyc_3.png';\nimport { LoaderFillerContainer } from '../Loader';\nimport DonationPoolBox from './DonationPool';\nimport { smallScreens } from '../../utilities/general/responsive';\nimport styled from 'styled-components';\n\ninterface Props {\n  menuOpen: boolean;\n}\n\nconst MerchantsPage = (props: Props) => {\n  const [sellers, setSellers] = useState<any | null>();\n  const [filter, setFilter] = useState<any | null>();\n  const [totalDonations, setDonations] = useState(0);\n  const [totalGiftCards, setGiftCards] = useState(0);\n\n  const fetchData = async () => {\n    const { data } = await getSellers();\n\n    const contributions = data.reduce(\n      (total: any, store: any) => {\n        return [\n          total[0] + store!.donation_amount,\n          total[1] + store!.gift_card_amount,\n        ];\n      },\n      [0, 0]\n    );\n\n    setSellers(data);\n    setFilter(data);\n    setDonations(contributions[0]);\n    setGiftCards(contributions[1]);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // TODO: replace this filter with a backend API call\n  const filterStoreType = (type: any) => {\n    if (type === 'all') {\n      setFilter(sellers);\n    } else {\n      const result = sellers.filter(\n        (store: any) => store!.cuisine_name === type\n      );\n      setFilter(result);\n    }\n  };\n\n  return (\n    <div\n      className={styles.container}\n      style={{ display: props.menuOpen ? 'none' : 'inherit' }}\n    >\n      {filter ? (\n        <>\n          <div className={styles.overlayContainer}>\n            <img\n              src={nycMapBackground}\n              className={styles.nycMap}\n              alt=\"NYC MAP\"\n            />\n            <div className={styles.contentContainer}>\n              <div className={styles.textArea}>\n                <h2 style={{ fontWeight: 'bolder' }}>Our Chinatown</h2>\n                <br />\n                <p>\n                  We are providing an online platform to low-tech, cash-only,\n                  Asian-owned small businesses that have been disproportionately\n                  impacted by COVID-19.\n                </p>\n                <p>\n                  Support local merchants by making a donation or purchasing a\n                  voucher from them.\n                </p>\n              </div>\n              {/* TODO: hook this part up to actual amounts - is there a total amount api call? */}\n              <div className={styles.storeInfo}>\n                <ContributionBar\n                  totalDonations={totalDonations}\n                  totalGiftCards={totalGiftCards}\n                />\n              </div>\n              <div className={styles.ownerPanel}>\n                <DescriptionBox />\n              </div>\n            </div>\n          </div>\n\n          <MerchantInfoContainer>\n            <DonationPoolBox />\n\n            <div className={styles.storeInfoContainer}>\n              <NavBar filterStoreType={filterStoreType} />\n\n              <div className={styles.merchantsContainer}>\n                {filter.map((store: any) =>\n                  store!.seller_id !== 'send-chinatown-love' ? (\n                    <MerchantCard key={store!.seller_id} storeInfo={store} />\n                  ) : null\n                )}\n              </div>\n            </div>\n          </MerchantInfoContainer>\n        </>\n      ) : (\n        <LoaderFillerContainer />\n      )}\n    </div>\n  );\n};\n\nexport default MerchantsPage;\n\nconst MerchantInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (${smallScreens}) {\n    flex-direction: column-reverse;\n  }\n`;\n"],"sourceRoot":""}
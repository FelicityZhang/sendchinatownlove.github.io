{"version":3,"sources":["components/ProgressBar/styles.module.scss","utilities/index.ts","components/MerchantsPage/styles.module.scss","components/ProgressBar/ProgressBar.tsx","components/MerchantsPage/images/merchantIcon.png","components/MerchantsPage/images/nyc_3.png","components/MerchantsPage/MerchantNavBar.tsx","components/MerchantsPage/MerchantCard.tsx","components/MerchantsPage/DescriptionBox.tsx","components/MerchantsPage/ContributionBar.tsx","components/MerchantsPage/MerchantsPage.tsx","components/Footer/image/logo.svg","utilities/api/index.ts","components/Footer/styles.module.scss","components/Footer/Footer.tsx","utilities/api/endpoints.ts","utilities/api/interactionManager.ts"],"names":["module","exports","SupporterTooltip","withStyles","theme","tooltip","backgroundColor","color","width","fontSize","typography","pxToRem","border","Tooltip","ProgressBar","raised","target","amountRaised","targetAmount","progressBarColor","numContributions","numDonations","numGiftCards","donationAmount","giftCardAmount","className","styles","progressContainer","classnames","targetAmountBar","currentRaisedBar","style","contributionInfo","Math","floor","toLocaleString","title","enterTouchDelay","placement","NavBar","filterStoreType","useState","selected","setSelected","NavContainer","value","text","map","type","key","onClick","e","preventDefault","setStoreType","toUpperCase","styled","div","MerchantCard","storeInfo","city","state","locations","to","seller_id","textDecoration","merchantCard","merchantCardLogo","src","hero_image_url","alt","Location","name","Summary","summary","story","amount_raised","target_amount","progress_bar_color","num_contributions","num_donations","num_gift_cards","donation_amount","gift_card_amount","p","TargetMerchantBox","Container","Icon","merchantIcon","List","Bullets","img","ul","li","ContributionBar","total","totalDonations","totalGiftCards","Heading","Contributions","background","TextContainer","MerchantsPage","sellers","setSellers","filter","setFilter","setDonations","setGiftCards","fetchData","a","getSellers","data","contributions","reduce","store","useEffect","container","overlayContainer","nycMapBackground","nycMap","contentContainer","textArea","fontWeight","ownerPanel","DescriptionBox","storeInfoContainer","result","cuisine_name","merchantsContainer","Footer","applyThemeColor","colorWhite","join","props","envelopeClass","instagramClass","facebookClass","iconClass","icon","linkClass","link","containerClass","bgColorDark","applyThemeBackgroundColor","href","logo","require","links","baseUrl","process","charges","axios","get","then","res","catch","err","getSeller","id","makeSquarePayment","nonce","sellerId","payment","buyer","email","idempotencyKey","idempotency_key","post","is_square","line_items","headers"],"mappings":"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","file":"static/js/7.60618105.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainer\":\"styles_progressContainer__3QTH2\",\"targetAmountBar\":\"styles_targetAmountBar__39mFS\",\"currentRaisedBar\":\"styles_currentRaisedBar__3nyvm\",\"contributionInfo\":\"styles_contributionInfo__2yMDv\"};","export * from './api';\nexport * from './hooks';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2WJAK\",\"storeInfoContainer\":\"styles_storeInfoContainer__2EkUd\",\"merchantsContainer\":\"styles_merchantsContainer__13vzx\",\"merchantCard\":\"styles_merchantCard__1vFxm\",\"merchantCardLogo\":\"styles_merchantCardLogo__25Qep\",\"overlayContainer\":\"styles_overlayContainer__3upFs\",\"nycMap\":\"styles_nycMap__qHmku\",\"contentContainer\":\"styles_contentContainer__1Wz03\",\"textArea\":\"styles_textArea__3id8d\",\"ownerPanel\":\"styles_ownerPanel__3Sxji\",\"storeInfo\":\"styles_storeInfo__1g3Wp\"};","import * as React from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.module.scss';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles, Theme } from '@material-ui/core/styles';\n\ninterface Props {\n  amountRaised: number;\n  targetAmount: number;\n  progressBarColor: string;\n  numContributions: number;\n  numDonations: number;\n  numGiftCards: number;\n  donationAmount: number;\n  giftCardAmount: number;\n}\n\nconst SupporterTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: '#ffffff',\n    color: 'rgba(0, 0, 0, 0.87)',\n    width: 180,\n    fontSize: theme.typography.pxToRem(14),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nconst ProgressBar = ({\n  amountRaised,\n  targetAmount,\n  progressBarColor,\n  numContributions,\n  numDonations,\n  numGiftCards,\n  donationAmount,\n  giftCardAmount,\n}: Props) => {\n  const progressWidth = (raised: number, target: number) => {\n    if (raised < target) return (raised / target) * 100;\n    return 100;\n  };\n\n  return (\n    <div className={styles.progressContainer}>\n      <div className={classnames(styles.targetAmountBar, 'progress-bar')}>\n        <div\n          className={styles.currentRaisedBar}\n          style={{\n            width: `${progressWidth(amountRaised, targetAmount)}%`,\n            backgroundColor: progressBarColor,\n            //defaults to default color if no color is passed in\n          }}\n        >\n          {' '}\n        </div>\n      </div>\n      <div className={styles.contributionInfo}>\n        <div>\n          ${(Math.floor(amountRaised) / 100).toLocaleString()} of $\n          {(Math.floor(targetAmount) / 100).toLocaleString()}\n        </div>\n        <div>\n          <SupporterTooltip\n            title={\n              <React.Fragment>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <b>{numGiftCards}</b> vouchers\n                      </td>\n                      <td>\n                        <b>${Math.floor(giftCardAmount) / 100}</b>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <b>{numDonations}</b> donations\n                      </td>\n                      <td>\n                        <b>${Math.floor(donationAmount) / 100}</b>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </React.Fragment>\n            }\n            enterTouchDelay={50}\n            placement=\"top\"\n          >\n            <div>\n              <b>{numContributions}</b> supporters\n            </div>\n          </SupporterTooltip>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","module.exports = __webpack_public_path__ + \"static/media/merchantIcon.2c7f1dbe.png\";","module.exports = __webpack_public_path__ + \"static/media/nyc_3.d3931cea.png\";","import * as React from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  filterStoreType: Function;\n}\n\nconst NavBar = ({ filterStoreType }: Props) => {\n  const [selected, setSelected] = useState('all');\n\n  const setStoreType = (type: any, e: any) => {\n    e.preventDefault();\n    setSelected(type);\n    filterStoreType(type);\n  };\n\n  const storeTypes = [\n    { value: 'all', text: 'All' },\n    { value: 'Bakery', text: 'Bakery' },\n    { value: 'Chinese', text: 'Restaurant' },\n    // { value: 'grocery', text: 'Grocery' },\n    // { value: 'salon', text: 'Salon' },\n  ];\n\n  return (\n    <React.Fragment>\n      <NavContainer>\n        {storeTypes.map((type) => (\n          <div key={type.value}>\n            <button\n              className={\n                selected === type.value\n                  ? 'modalButton--filled'\n                  : 'modalButton--back'\n              }\n              onClick={(e) => setStoreType(type.value, e)}\n            >\n              {type.text.toUpperCase()}\n            </button>\n          </div>\n        ))}\n      </NavContainer>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n\nconst NavContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 500px;\n  margin-bottom: 50px;\n\n  @media (max-width: 450px) {\n    display: none;\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BrowsePageSeller } from '../../utilities/api';\nimport ProgressBar from '../ProgressBar';\nimport styled from 'styled-components';\nimport styles from './styles.module.scss';\n\nexport interface Props {\n  storeInfo?: BrowsePageSeller;\n}\n\nconst MerchantCard = ({ storeInfo }: Props) => {\n  let city = '';\n  let state = '';\n\n  if (storeInfo!.locations && storeInfo!.locations[0]) {\n    city = storeInfo!.locations[0].city;\n    state = storeInfo!.locations[0].state;\n  }\n\n  return (\n    <React.Fragment>\n      <Link\n        to={`/${storeInfo!.seller_id}`}\n        style={{ textDecoration: 'none', color: 'black' }}\n      >\n        <div className={styles.merchantCard}>\n          <img\n            className={styles.merchantCardLogo}\n            src={storeInfo!.hero_image_url}\n            alt=\"Logo\"\n          />\n          <Location>\n            {city}, {state}\n          </Location>\n          <h3>{storeInfo!.name}</h3>\n          <Summary>{storeInfo!.summary || storeInfo!.story}</Summary>\n          {/* TODO: need to update \"donation\" phrase and the time stamp */}\n          {/* <div style={{ color: '#949494' }}>\n            Last donation 1h ago\n          </div> */}\n          <br />\n          <ProgressBar\n            amountRaised={storeInfo!.amount_raised}\n            targetAmount={storeInfo!.target_amount}\n            progressBarColor={storeInfo!.progress_bar_color}\n            numContributions={storeInfo!.num_contributions}\n            numDonations={storeInfo!.num_donations}\n            numGiftCards={storeInfo!.num_gift_cards}\n            donationAmount={storeInfo!.donation_amount}\n            giftCardAmount={storeInfo!.gift_card_amount}\n          />\n        </div>\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default MerchantCard;\n\nconst Location = styled.div`\n  font-weight: bolder;\n  color: #46accc;\n`;\n\nconst Summary = styled.p`\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: 75px;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport styles from './styles.module.scss';\nimport merchantIcon from './images/merchantIcon.png';\n\nconst TargetMerchantBox = () => (\n  <Container className={styles.merchantCard}>\n    <Icon src={merchantIcon} alt=\"target-merchant-img\" />\n    <h3>Meet our Target Merchant</h3>\n    <List>\n      <Bullets>Asian immigrant-owned small businesses</Bullets>\n      <Bullets>\n        Not fluent in English, run cash-only establishments, and not tech-savvy\n      </Bullets>\n      <Bullets>\n        Currently struggling to pay rent, utility bill and employee wages\n      </Bullets>\n      <Bullets>\n        Do not have websites, online delivery service, or vouchers available\n      </Bullets>\n      <Bullets>\n        Located in NYC Manhattan Chinatown, Flushing, or Bensonhurst\n      </Bullets>\n    </List>\n  </Container>\n);\n\nexport default TargetMerchantBox;\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Icon = styled.img`\n  width: 45%;\n`;\n\nconst List = styled.ul`\n  padding: 0 5px 0 20px;\n`;\n\nconst Bullets = styled.li`\n  text-align: left;\n  padding: 5px 0;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  totalDonations: number;\n  totalGiftCards: number;\n}\n\nconst ContributionBar = ({ totalDonations, totalGiftCards }: Props) => {\n  const progressWidth = (raised: number, total: number) => {\n    if (raised < total) return (raised / total) * 100;\n    return 100;\n  };\n\n  return (\n    <Container>\n      <Heading>Total Raised</Heading>\n      <Contributions\n        style={{\n          background: `linear-gradient(-45deg, #dd678a ${progressWidth(\n            totalDonations,\n            totalDonations + totalGiftCards\n          )}%, #F6B917 0%)`,\n        }}\n      />\n      <TextContainer>\n        <span>\n          VOUCHERS:{' '}\n          <b>${(Math.floor(totalGiftCards) / 100).toLocaleString()}</b>\n        </span>\n        <span>\n          DONATIONS:{' '}\n          <b>${(Math.floor(totalDonations) / 100).toLocaleString()}</b>\n        </span>\n      </TextContainer>\n      <p>\n        100% of all proceeds go to the businesses, and we cover the credit card\n        processing fees.\n      </p>\n    </Container>\n  );\n};\n\nexport default ContributionBar;\n\nconst Container = styled.div`\n  font-size: 13px;\n`;\n\nconst Contributions = styled.div`\n  border-radius: 25px;\n  height: 25px;\n  z-index: 5;\n  width: 100%;\n  margin-bottom: 15px;\n`;\n\nconst TextContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Heading = styled.div`\n  font-size: 17px;\n  font-weight: bold;\n  margin: 15px 0;\n`;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { getSellers } from '../../utilities';\nimport Footer from '../Footer';\nimport NavBar from './MerchantNavBar';\nimport MerchantCard from './MerchantCard';\nimport DescriptionBox from './DescriptionBox';\nimport ContributionBar from './ContributionBar';\nimport styles from './styles.module.scss';\nimport nycMapBackground from './images/nyc_3.png';\n\nconst MerchantsPage: React.FC<{}> = () => {\n  const [sellers, setSellers] = useState<any | null>();\n  const [filter, setFilter] = useState<any | null>();\n  const [totalDonations, setDonations] = useState(0);\n  const [totalGiftCards, setGiftCards] = useState(0);\n\n  const fetchData = async () => {\n    const { data } = await getSellers();\n\n    const contributions = data.reduce(\n      (total: any, store: any) => {\n        return [\n          total[0] + store!.donation_amount,\n          total[1] + store!.gift_card_amount,\n        ];\n      },\n      [0, 0]\n    );\n\n    setSellers(data);\n    setFilter(data);\n    setDonations(contributions[0]);\n    setGiftCards(contributions[1]);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // TODO: replace this filter with a backend API call\n  const filterStoreType = (type: any) => {\n    if (type === 'all') {\n      setFilter(sellers);\n    } else {\n      const result = sellers.filter(\n        (store: any) => store!.cuisine_name === type\n      );\n      setFilter(result);\n    }\n  };\n\n  return filter ? (\n    <React.Fragment>\n      <div className={styles.container}>\n        <div className={styles.overlayContainer}>\n          <img src={nycMapBackground} className={styles.nycMap} alt=\"NYC MAP\" />\n          <div className={styles.contentContainer}>\n            <div className={styles.textArea}>\n              <h2 style={{ fontWeight: 'bolder' }}>Our Chinatown</h2>\n              <br />\n              <p>\n                We are providing an online platform to low-tech, cash-only,\n                Asian-owned small businesses that have been disproportionately\n                impacted by COVID-19.\n              </p>\n              <p>\n                Support local merchants by making a donation or purchasing a\n                voucher from them.\n              </p>\n            </div>\n            {/* TODO: hook this part up to actual amounts - is there a total amount api call? */}\n            <div className={styles.storeInfo}>\n              <ContributionBar\n                totalDonations={totalDonations}\n                totalGiftCards={totalGiftCards}\n              />\n            </div>\n            <div className={styles.ownerPanel}>\n              <DescriptionBox />\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.storeInfoContainer}>\n          <NavBar filterStoreType={filterStoreType} />\n\n          <div className={styles.merchantsContainer}>\n            {filter.map((store: any) => (\n              <MerchantCard key={store!.seller_id} storeInfo={store} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  ) : null;\n};\n\nexport default MerchantsPage;\n","module.exports = __webpack_public_path__ + \"static/media/logo.909f1479.svg\";","export * from './types';\nexport * from './interactionManager';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3x5BM\",\"logo\":\"styles_logo__GbMRD\",\"links\":\"styles_links__14pHF\",\"link\":\"styles_link__38mAn\",\"colorWhite\":\"styles_colorWhite__2rMCv\",\"bgColorDark\":\"styles_bgColorDark__1n4IJ\",\"icon\":\"styles_icon__8XdB0\"};","import React from 'react';\nimport styles from './styles.module.scss';\n\nexport type Theme = 'dark' | 'none';\n\ninterface Props {\n  theme?: Theme;\n}\n\nfunction applyThemeColor(className: string, theme: Theme) {\n  if (theme === 'dark') {\n    return [className, styles.colorWhite].join(' ');\n  }\n  return className;\n}\n\nfunction applyThemeBackgroundColor(className: string, theme: Theme) {\n  if (theme === 'dark') {\n    return [className, styles.bgColorDark].join(' ');\n  }\n  return className;\n}\n\nfunction imgLogo(theme: Theme) {\n  if (theme === 'dark') {\n    return require(`./image/logo.svg`);\n  }\n  return require(`./image/logo.svg`);\n}\n\nfunction Footer(props: Props) {\n  const { theme = 'none' } = props;\n\n  const envelopeClass = applyThemeColor('fa fa-envelope', theme);\n  const instagramClass = applyThemeColor('fa fa-instagram', theme);\n  const facebookClass = applyThemeColor('fa fa-facebook', theme);\n  const iconClass = applyThemeColor(styles.icon, theme);\n  const linkClass = applyThemeColor(styles.link, theme);\n  const containerClass = applyThemeBackgroundColor(styles.container, theme);\n\n  return (\n    <footer>\n      <div className={containerClass}>\n        <a href=\"https://sendchinatownlove.com/\">\n          <img\n            className={styles.logo}\n            src={imgLogo(theme)}\n            alt=\"send chinatown love\"\n          />\n        </a>\n        <ul className={styles.links}>\n          <li>\n            <a className={iconClass} href=\"mailto:hello@sendchinatownlove.com\">\n              <span className={envelopeClass} />\n            </a>\n            <a className={linkClass} href=\"mailto:hello@sendchinatownlove.com\">\n              Email\n            </a>\n          </li>\n          <li>\n            <a\n              className={iconClass}\n              href=\"https://instagram.com/sendchinatownlove\"\n            >\n              <span className={instagramClass} />\n            </a>\n            <a\n              className={linkClass}\n              href=\"https://instagram.com/sendchinatownlove\"\n            >\n              Instagram\n            </a>\n          </li>\n          <li>\n            <a\n              className={iconClass}\n              href=\"https://www.facebook.com/Send-Chinatown-Love-100872288240891/\"\n            >\n              <span className={facebookClass} />\n            </a>\n            <a\n              className={linkClass}\n              href=\"https://www.facebook.com/Send-Chinatown-Love-100872288240891/\"\n            >\n              Facebook\n            </a>\n          </li>\n        </ul>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","const baseUrl = process.env.REACT_APP_API_ENDPOINT!;\n\nexport const sellers = baseUrl + 'sellers/';\nexport const charges = baseUrl + 'charges';\n","import axios from 'axios';\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { Buyer, PaymentParams, SquarePaymentParams } from './types';\nimport { charges, sellers } from './endpoints';\n\n// Fix return typing\nexport const getSellers = async () =>\n  axios\n    .get(sellers)\n    .then((res) => res)\n    .catch((err) => err);\n\n// Fix return typing\nexport const getSeller = async (id: string) =>\n  axios\n    .get(sellers + id)\n    .then((res) => res)\n    .catch((err) => err);\n\n// TODO(ArtyEmsee): add typing for stripe elements\nexport const makePayment = async (\n  stripe: any,\n  elements: any,\n  payment: PaymentParams,\n  buyer: Buyer\n) => {\n  const { email, name } = buyer;\n\n  // TODO(ArtyEmsee): abstract api call, create global object for headers\n  await axios\n    .post(\n      charges,\n      {\n        is_square: false,\n        line_items: [payment],\n        email: email,\n      },\n      { headers: { 'Access-Control-Allow-Origin': '*' } }\n    )\n    .then(async (res) => {\n      // TODO(ArtyEmsee): fix response to success\n      if (!stripe || !elements) return;\n      else {\n        const cardElement = elements!.getElement(CardElement);\n        const result = await stripe!.confirmCardPayment(\n          `${res.data.client_secret}`,\n          {\n            payment_method: {\n              card: cardElement!,\n              billing_details: {\n                name: name,\n                email: email,\n              },\n            },\n          }\n        );\n\n        if (result.error) {\n          console.log(result.error.message);\n        } else {\n          if (result.paymentIntent?.status === 'succeeded') {\n            console.log(\n              result.paymentIntent?.status,\n              'The payment has been processed!'\n            );\n          }\n        }\n      }\n    });\n\n  // TODO(ArtyEmsee): fix response to error\n};\n\nexport const makeSquarePayment = async (\n  nonce: string,\n  sellerId: string,\n  payment: SquarePaymentParams,\n  buyer: Buyer\n) => {\n  const { email, name } = buyer;\n  const idempotencyKey = buyer.idempotency_key;\n\n  return await axios\n    .post(\n      charges,\n      {\n        is_square: true,\n        nonce,\n        line_items: [payment],\n        email,\n        name,\n        seller_id: sellerId,\n        idempotency_key: idempotencyKey,\n      },\n      { headers: { 'Access-Control-Allow-Origin': '*' } }\n    )\n    .then(async (res) => {\n      return res;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n"],"sourceRoot":""}